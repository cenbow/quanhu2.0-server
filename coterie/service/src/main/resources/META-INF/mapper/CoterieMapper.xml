<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yryz.quanhu.coterie.coterie.dao.CoterieMapper" >
  <resultMap id="BaseResultMap" type="com.yryz.quanhu.coterie.coterie.entity.Coterie" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="kid" property="coterieId" jdbcType="CHAR" />
    <result column="owner_id" property="ownerId" jdbcType="VARCHAR" />
    <result column="owner_name" property="ownerName" jdbcType="VARCHAR" />
    <result column="owner_intro" property="ownerIntro" jdbcType="VARCHAR" />
    <result column="icon" property="icon" jdbcType="VARCHAR" />
    <result column="coterie_name" property="name" jdbcType="VARCHAR" />
    <result column="intro" property="intro" jdbcType="VARCHAR" />
    <result column="qr_url" property="qrUrl" jdbcType="VARCHAR" />
    <result column="join_fee" property="joinFee" jdbcType="INTEGER" />
    <result column="consulting_fee" property="consultingFee" jdbcType="INTEGER" />
    <result column="join_check" property="joinCheck" jdbcType="TINYINT" />
    <result column="member_num" property="memberNum" jdbcType="INTEGER" />
    <result column="state" property="status" jdbcType="TINYINT" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="last_update_date" property="lastUpdateDate" jdbcType="TIMESTAMP" />
    <result column="process_time" property="processTime" jdbcType="TIMESTAMP" />
    <result column="deleted" property="deleted" jdbcType="TINYINT" />
    <result column="heat" property="heat" jdbcType="BIGINT" />
    <result column="is_expert" property="isExpert" jdbcType="TINYINT" />
    <result column="recommend" property="recommend" jdbcType="TINYINT" />
    <result column="last_info_time" property="lastInfoTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, kid, owner_id,  owner_name, owner_intro, icon, coterie_name, intro,
    qr_url, join_fee, consulting_fee, join_check, member_num, state, create_date, last_update_date,
    process_time, deleted,heat,is_expert,recommend,last_info_time
  </sql>
  <insert id="insert" parameterType="com.yryz.quanhu.coterie.coterie.entity.Coterie" >
    insert into qh_coterie (id, kid, owner_id,
       owner_name, owner_intro,
      icon, coterie_name, intro,
      qr_url, join_fee, consulting_fee, 
      join_check, member_num, state,
      create_date, last_update_date, process_time, 
      deleted,heat,is_expert,recommend,last_info_time)
    values (#{id,jdbcType=BIGINT}, #{coterieId,jdbcType=CHAR}, #{ownerId,jdbcType=VARCHAR}, 
       #{ownerName,jdbcType=VARCHAR}, #{ownerIntro,jdbcType=VARCHAR},
      #{icon,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{intro,jdbcType=VARCHAR}, 
      #{qrUrl,jdbcType=VARCHAR}, #{joinFee,jdbcType=INTEGER}, #{consultingFee,jdbcType=INTEGER}, 
      #{joinCheck,jdbcType=TINYINT}, #{memberNum,jdbcType=INTEGER}, #{status,jdbcType=TINYINT}, 
      #{createDate,jdbcType=TIMESTAMP}, #{lastUpdateDate,jdbcType=TIMESTAMP}, #{processTime,jdbcType=TIMESTAMP}, 
      #{deleted,jdbcType=TINYINT},#{heat},#{isExpert},#{recommend},#{lastInfoTime)
  </insert>
  <insert id="insertSelective" parameterType="com.yryz.quanhu.coterie.coterie.entity.Coterie" >
    insert into qh_coterie
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="coterieId != null" >
        kid,
      </if>
      <if test="ownerId != null" >
        owner_id,
      </if>

      <if test="ownerName != null" >
        owner_name,
      </if>
      <if test="ownerIntro != null" >
        owner_intro,
      </if>
      <if test="icon != null" >
        icon,
      </if>
      <if test="name != null" >
        coterie_name,
      </if>
      <if test="intro != null" >
        intro,
      </if>
      <if test="qrUrl != null" >
        qr_url,
      </if>
      <if test="joinFee != null" >
        join_fee,
      </if>
      <if test="consultingFee != null" >
        consulting_fee,
      </if>
      <if test="joinCheck != null" >
        join_check,
      </if>
      <if test="memberNum != null" >
        member_num,
      </if>
      <if test="status != null" >
        state,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="lastUpdateDate != null" >
        last_update_date,
      </if>
      <if test="processTime != null" >
        process_time,
      </if>
      <if test="deleted != null" >
        deleted,
      </if>
      
      <if test="heat != null" >
        heat,
      </if>
      <if test="isExpert != null" >
        is_expert,
      </if>
      <if test="recommend != null" >
        recommend,
      </if>
      <if test="lastInfoTime != null" >
        last_info_time,
      </if>
      tenant_id,revision,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="coterieId != null" >
        #{coterieId,jdbcType=CHAR},
      </if>
      <if test="ownerId != null" >
        #{ownerId,jdbcType=VARCHAR},
      </if>

      <if test="ownerName != null" >
        #{ownerName,jdbcType=VARCHAR},
      </if>
      <if test="ownerIntro != null" >
        #{ownerIntro,jdbcType=VARCHAR},
      </if>
      <if test="icon != null" >
        #{icon,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="intro != null" >
        #{intro,jdbcType=VARCHAR},
      </if>
      <if test="qrUrl != null" >
        #{qrUrl,jdbcType=VARCHAR},
      </if>
      <if test="joinFee != null" >
        #{joinFee,jdbcType=INTEGER},
      </if>
      <if test="consultingFee != null" >
        #{consultingFee,jdbcType=INTEGER},
      </if>
      <if test="joinCheck != null" >
        #{joinCheck,jdbcType=TINYINT},
      </if>
      <if test="memberNum != null" >
        #{memberNum,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateDate != null" >
        #{lastUpdateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="processTime != null" >
        #{processTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null" >
        #{deleted,jdbcType=TINYINT},
      </if>
      <if test="heat != null" >
        #{heat},
      </if>
      <if test="isExpert != null" >
        #{isExpert},
      </if>
      <if test="recommend != null" >
        #{recommend},
      </if>
      <if test="lastInfoTime != null" >
        #{lastInfoTime},
      </if>
      '',0,
    </trim>
  </insert>
  <update id="updateByCoterieIdSelective" parameterType="com.yryz.quanhu.coterie.coterie.entity.Coterie" >
    update qh_coterie
    <set >
      <if test="coterieId != null" >
        kid = #{coterieId,jdbcType=CHAR},
      </if>
      <if test="ownerId != null" >
        owner_id = #{ownerId,jdbcType=VARCHAR},
      </if>

      <if test="ownerName != null" >
        owner_name = #{ownerName,jdbcType=VARCHAR},
      </if>
      <if test="ownerIntro != null" >
        owner_intro = #{ownerIntro,jdbcType=VARCHAR},
      </if>
      <if test="icon != null" >
        icon = #{icon,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
       coterie_name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="intro != null" >
        intro = #{intro,jdbcType=VARCHAR},
      </if>
      <if test="qrUrl != null" >
        qr_url = #{qrUrl,jdbcType=VARCHAR},
      </if>
      <if test="joinFee != null" >
        join_fee = #{joinFee,jdbcType=INTEGER},
      </if>
      <if test="consultingFee != null" >
        consulting_fee = #{consultingFee,jdbcType=INTEGER},
      </if>
      <if test="joinCheck != null" >
        join_check = #{joinCheck,jdbcType=TINYINT},
      </if>
      <if test="memberNum != null" >
        member_num = #{memberNum,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        state = #{status,jdbcType=TINYINT},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateDate != null" >
        last_update_date = #{lastUpdateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="processTime != null" >
        process_time = #{processTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null" >
        deleted = #{deleted,jdbcType=TINYINT},
      </if>
      
      <if test="heat != null" >
        heat = #{heat},
      </if>
      <if test="isExpert != null" >
        is_expert = #{isExpert},
      </if>
      <if test="recommend != null" >
        recommend = #{recommend},
      </if>
      <if test="lastInfoTime != null" >
        last_info_time = #{lastInfoTime},
      </if>
    </set>
    where kid = #{coterieId,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yryz.quanhu.coterie.coterie.entity.Coterie" >
    update qh_coterie
    set kid = #{coterieId,jdbcType=CHAR},
      owner_id = #{ownerId,jdbcType=VARCHAR},
      owner_name = #{ownerName,jdbcType=VARCHAR},
      owner_intro = #{ownerIntro,jdbcType=VARCHAR},
      icon = #{icon,jdbcType=VARCHAR},
      coterie_name = #{name,jdbcType=VARCHAR},
      intro = #{intro,jdbcType=VARCHAR},
      qr_url = #{qrUrl,jdbcType=VARCHAR},
      join_fee = #{joinFee,jdbcType=INTEGER},
      consulting_fee = #{consultingFee,jdbcType=INTEGER},
      join_check = #{joinCheck,jdbcType=TINYINT},
      member_num = #{memberNum,jdbcType=INTEGER},
      state = #{status,jdbcType=TINYINT},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      last_update_date = #{lastUpdateDate,jdbcType=TIMESTAMP},
      process_time = #{processTime,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=TINYINT},
      heat = #{heat},
      is_expert = #{isExpert},
      recommend = #{recommend},
      last_info_time = #{lastInfoTime}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <update id="updateMemberNum">
    update coterie
    set member_num = #{newMemberNum,jdbcType=INTEGER},
      last_update_date = now()
    where kid = #{coterieId,jdbcType=CHAR} and member_num=#{oldMemberNum}
  </update>
  
  <update id="updateExpert">
    update qh_coterie
    set is_expert = #{isExpert}
    where owner_id = #{custId}
  </update>
  
  <update id="updateRecommend">
    update qh_coterie
    set recommend = #{recommend}
    where kid in
    <foreach item="item" index="index" collection="coterieIdList" open="("
			separator="," close=")">
			#{item}
	</foreach>
  </update>
  
  <select id="selectByCoterieId" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from qh_coterie
    where kid = #{coterieId}
  </select>
  
  <select id="selectListByCoterieIdList" resultMap="BaseResultMap" parameterType="java.util.List" >
    select 
    <include refid="Base_Column_List" />
    from qh_coterie
    where kid in
    <foreach item="item" index="index" collection="coterieIdList" open="("
			separator="," close=")">
			#{item}
	</foreach>
	order by heat desc
  </select>
  
  <select id="selectListByStatus" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from qh_coterie
    where state = #{status}
  </select>
  
  <select id="selectListByCoterie" resultMap="BaseResultMap" parameterType="com.yryz.quanhu.coterie.coterie.entity.Coterie" >
    select 
    <include refid="Base_Column_List" />
    from qh_coterie
    <where>
	      <if test="coterieId != null" >
            kid = #{coterieId,jdbcType=CHAR},
	      </if>
	      <if test="ownerId != null" >
	        owner_id = #{ownerId,jdbcType=VARCHAR},
	      </if>
	      <if test="ownerName != null" >
	        owner_name = #{ownerName,jdbcType=VARCHAR},
	      </if>
	      <if test="ownerIntro != null" >
	        owner_intro = #{ownerIntro,jdbcType=VARCHAR},
	      </if>
	      <if test="icon != null" >
	        icon = #{icon,jdbcType=VARCHAR},
	      </if>
	      <if test="name != null" >
           coterie_name = #{name,jdbcType=VARCHAR},
	      </if>
	      <if test="intro != null" >
	        intro = #{intro,jdbcType=VARCHAR},
	      </if>
	      <if test="qrUrl != null" >
	        qr_url = #{qrUrl,jdbcType=VARCHAR},
	      </if>
	      <if test="joinFee != null" >
	        join_fee = #{joinFee,jdbcType=INTEGER},
	      </if>
	      <if test="consultingFee != null" >
	        consulting_fee = #{consultingFee,jdbcType=INTEGER},
	      </if>
	      <if test="joinCheck != null" >
	        join_check = #{joinCheck,jdbcType=TINYINT},
	      </if>
	      <if test="memberNum != null" >
	        member_num = #{memberNum,jdbcType=INTEGER},
	      </if>
	      <if test="status != null" >
            state = #{status,jdbcType=TINYINT},
	      </if>
	      <if test="createDate != null" >
	        create_date = #{createDate,jdbcType=TIMESTAMP},
	      </if>
	      <if test="lastUpdateDate != null" >
	        last_update_date = #{lastUpdateDate,jdbcType=TIMESTAMP},
	      </if>
	      <if test="processTime != null" >
	        process_time = #{processTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="deleted != null" >
	        deleted = #{deleted,jdbcType=TINYINT},
	      </if>
    </where>
  </select>
  
  <select id="findPageByStatus" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from qh_coterie
    where state=#{status}
    ORDER BY `create_date` DESC 
    limit #{start},#{pageSize} 
  </select>
  
  <select id="findPage" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from qh_coterie where state=3
    ORDER BY `create_date` DESC,heat desc 
   	limit #{start},#{pageSize} 
  </select>
  
  <select id="selectMyCreateCoterie" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from qh_coterie
    WHERE owner_id=#{custId}
  	ORDER BY create_date DESC
  </select>
  
  <select id="selectMyCreateCoteriePage" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from qh_coterie
    WHERE owner_id=#{custId} 
    <if test="status !=null">
    	and state=#{status}
    </if>
  	ORDER BY create_date DESC
  	limit #{start},#{pageSize} 
  </select>
  
  <select id="selectMyCreateCoterieCount"  resultType="java.lang.Integer" >
    select 
    count(*) 
    from qh_coterie
    WHERE owner_id=#{custId}
    <if test="status !=null">
    	and state=#{status}
    </if>
  </select>
  
  <select id="selectMyJoinCoterie" resultMap="BaseResultMap">
    SELECT c.* 
    FROM `qh_coterie` c, `qh_coterie_member` m
    WHERE c.kid=m.coterie_id
    AND c.state=3
    AND m.user_id=#{custId}
    ORDER BY m.create_date DESC
  </select>
  
  <select id="selectMyJoinCoteriePage" resultMap="BaseResultMap">
    SELECT c.* 
    FROM `qh_coterie` c, `qh_coterie_member` m
    WHERE c.kid=m.coterie_id
    AND c.state=3
    AND m.user_id=#{custId}
    ORDER BY m.create_date DESC
    limit #{start},#{pageSize} 
  </select>
  
  <select id="selectMyJoinCoterieCount" resultType="java.lang.Integer">
    SELECT count(*) 
    FROM `qh_coterie` c, `qh_coterie_member` m
    WHERE c.kid=m.coterie_id
    AND c.state=3
    AND m.user_id=#{custId}
  </select>
  
  <select id="selectByName" resultMap="BaseResultMap" parameterType="java.lang.String">
    select 
    <include refid="Base_Column_List" />
    from qh_coterie
    WHERE  coterie_name=#{name}
  </select>
  
  <select id="selectLikeName" resultMap="BaseResultMap" parameterType="java.lang.String">
    select 
    <include refid="Base_Column_List" />
    from qh_coterie
    WHERE (coterie_name like CONCAT('%',#{name},'%')
    	or intro like CONCAT('%',#{name},'%'))
    	and state=3
    order by heat desc
    limit #{start},#{pageSize}
  </select>
  
  <select id="selectByCustIdAndCircleId" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from qh_coterie
    WHERE owner_id=#{custId}
    	and (state=0 or state=3)
  </select>
  
  <select id="selectBySearchParam" resultType="com.yryz.quanhu.coterie.coterie.entity.Coterie" parameterType="com.yryz.quanhu.coterie.coterie.entity.CoterieSearch">
    SELECT s.owner_name ownerName,
	  s.owner_intro ownerIntro,
	  s.coterie_name,
	  s.create_date createDate,
	  s.join_fee joinFee,
	  s.consulting_fee consultingFee,
	  s.owner_id ownerId,
	  s.intro,
	  s.kid coterieId,
	  s.join_check joinCheck,
	  s.status,
	  s.recommend,
	  s.is_expert isExpert,
	  s.icon,
	  s.intro,
	  s.qr_url qrUrl,
	  s.member_num memberNum,
	  s.heat
	FROM `qh_coterie` s
	WHERE 1=1
	<if test="status !=null"> AND s.state=#{status}</if>
	<if test="coterieName !=null"> AND s.coterie_name LIKE CONCAT('%',#{coterieName},'%')</if>
	<if test="ownerId !=null"> AND s.owner_id=#{ownerId}</if>
	<if test="startTime !=null"> AND s.create_date BETWEEN #{startTime} AND #{endTime}</if>
	<if test="recommend !=null"> AND s.recommend = #{recommend}</if>
	<if test="coterieIdList !=null"> 
		AND s.kid in
		<foreach item="item" index="index" collection="coterieIdList" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</if>
	order by s.create_date ${sortValue}
	limit #{start},#{pageSize}
  </select>
  
  <select id="selectCountBySearchParam" resultType="java.lang.Integer" parameterType="com.yryz.quanhu.coterie.coterie.entity.CoterieSearch">
    SELECT count(*)
	FROM `qh_coterie` s
	WHERE 1=1
	<if test="status !=null"> AND s.state=#{status}</if>
	<if test="coterieName !=null"> AND s.coterie_name LIKE CONCAT('%',#{coterieName},'%')</if>
	<if test="ownerId !=null"> AND s.owner_id=#{ownerId}</if>
	<if test="startTime !=null"> AND s.create_date BETWEEN #{startTime} AND #{endTime}</if>
	<if test="coterieIdList !=null"> 
		AND s.kid in
		<foreach item="item" index="index" collection="coterieIdList" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</if>
  </select>
  
  <select id="selectRecommendList" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" /> 
    from qh_coterie
    where state=3 and recommend=1
    order by heat desc
    limit #{start},#{pageSize}
  </select>
  
  <select id="selectHeatList" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" /> 
    from qh_coterie
    where state=3 and is_expert=#{expert} and last_info_time is not null
    order by heat desc
    limit #{start},#{pageSize}
  </select>
  
  <select id="selectHeatListByCircleId" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" /> 
    from qh_coterie
    where state=3
    order by heat desc
    limit #{start},#{pageSize}
  </select>


  
  <select id="selectCountByCircleId"  resultType="java.lang.Integer" >
    select 
    count(*) 
    from qh_coterie
    <where>
    	<if test="status != null"> and state = #{status}</if>
    </where>
  </select>
  
  <select id="selectCircleIdListByOwnerId" resultType="java.lang.String">
    select  DISTINCT 
    kid
    from qh_coterie
    WHERE owner_id=#{ownerId} and (state = 3 or state = 0)
  </select>
</mapper>